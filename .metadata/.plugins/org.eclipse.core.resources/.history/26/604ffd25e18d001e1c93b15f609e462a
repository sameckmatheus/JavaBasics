package entregas;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

public class JogoDaForca {
    private static final String[] PALAVRAS = {"casa", "carro", "computador", "telefone", "escola"};
    private static final int MAX_TENTATIVAS = 6;

    private String palavra;
    private char[] palavraEscondida;
    private List<Character> letrasTentadas;
    private int tentativasRestantes;

    public JogoDaForca() {
        Random random = new Random();
        int indice = random.nextInt(PALAVRAS.length);
        palavra = PALAVRAS[indice];
        palavraEscondida = new char[palavra.length()];
        for (int i = 0; i < palavra.length(); i++) {
            palavraEscondida[i] = '_';
        }
        letrasTentadas = new ArrayList<>();
        tentativasRestantes = MAX_TENTATIVAS;
    }

    public void jogar() {
        Scanner scanner = new Scanner(System.in);
        String arteTitulo = """
######   #####   ######     ####     ###
##      ##   ##  ###  ##   ##  ##   ## ##
##      ##   ##  ##   ##  ##       ##   ##
#####   ##   ##  ##  ##   ##       ##   ##
##      ##   ##  #####    ##       #######
##      ##   ##  ## ###    ##  ##  ##   ##
##       #####   ##  ###    ####   ##   ##
	            """;
		System.out.println(arteTitulo);
		System.out.println("Bem-vindo ao Jogo da Forca!");
        exibirJogo();
        
        while (tentativasRestantes > 0 && !jogoFinalizado()) {
            System.out.print("Digite uma letra ou chute a palavra: ");
            String entrada = scanner.nextLine().toLowerCase();
            if (entrada.length() == 1) {
                char letra = entrada.charAt(0);
                if (letrasTentadas.contains(letra)) {
                    System.out.println("A letra '" + letra + "' já foi tentada.");
                } else {
                    letrasTentadas.add(letra);
                    boolean encontrouLetra = false;
                    for (int i = 0; i < palavra.length(); i++) {
                        if (palavra.charAt(i) == letra) {
                            encontrouLetra = true;
                            palavraEscondida[i] = letra;
                        }
                    }
                    if (encontrouLetra) {
                        System.out.println("Você acertou a letra!");
                    } else {
                        System.out.println("Você errou a letra.");
                        tentativasRestantes--;
                    }
                }
            } else {
                if (entrada.equals(palavra)) {
                    palavraEscondida = palavra.toCharArray();
                } else {
                    tentativasRestantes--;
                    System.out.println("Você errou o chute.");
                }
            }
            exibirJogo();
        }
        if (jogoFinalizado() && tentativasRestantes > 0) {
            System.out.println("Parabéns, você acertou a palavra!");
            System.out.println("""
┈┈┈┈┈┈┈MERRY┈┈┈┈┈┈
╭╮┓┓┳╮┳╭╮┏┳┓┳┳╮╭╮╭╮
┃┈┣┫┣┫┃╰╮┈┃┈┃┃┃┣┫╰╮
╰╯┛┛┻╰┻╰╯┈┻┈┛┛┛┛┛╰╯
┈┈┈┈┈┈TO┈YOU┈┈┈┈┈┈
            		""");
        } else {
            System.out.println("Que pena, você não conseguiu acertar a palavra. A palavra correta era '" + palavra + "'.");
        }
        scanner.close();
    }

    private void exibirJogo() {
        System.out.println(arteForca());

        System.out.println();
        for (char letra : palavraEscondida) {
            System.out.print(letra + " ");
        }
        System.out.println("\n");
        exibirLetrasTentadas();
    }

    private void exibirLetrasTentadas() {
        System.out.print("Letras tentadas: ");
        for (char letra : letrasTentadas) {
            System.out.print(letra + " ");
        }
        System.out.println("\n");
    }

    private String arteForca() {
    	String[] partesForca = {
    	        "   _____ \n"+
    	        "   |   |\n"+
    	        "   |\n"+
    	        "   |\n"+
    	        "   |\n"+
    	        "   |\n"+
    	        "___|___",
    	        "   _____ \n"+
    	        "   |   |\n"+
    	        "   |   O\n"+
    	        "   |\n"+
    	        "   |\n"+
    	        "   |\n"+
    	        "___|___",
    	        "   _____ \n"+
    	        "   |   |\n"+
    	        "   |   O\n"+
    	        "   |   |\n"+
    	        "   |\n"+
    	        "   |\n"+
    	        "___|___",
    	        "   _____ \n"+
    	        "   |   |\n"+
    	        "   |   O\n"+
    	        "   |  /|\n"+
    	        "   |\n"+
    	        "   |\n"+
    	        "___|___",
    	        "   _____ \n"+
    	        "   |   |\n"+
    	        "   |   O\n"+
    	        "   |  /|\\\n"+
    	        "   |\n"+
    	        "   |\n"+
    	        "___|___",
    	        "   _____ \n"+
    	        "   |   |\n"+
    	        "   |   O\n"+
    	        "   |  /|\\\n"+
    	        "   |  /\n"+
    	        "   |\n"+
    	        "___|___",
    	        "   _____ \n"+
    	        "   |   |\n"+
    	        "   |   O\n"+
    	        "   |  /|\\\n"+
    	        "   |  / \\\n"+
    	        "   |\n"+
    	        "___|___"
    	};
        
        int erros = MAX_TENTATIVAS - tentativasRestantes;

        if (erros < partesForca.length) {
            return partesForca[erros];
        } else {
            return partesForca[partesForca.length - 1];
        }
    }

    private boolean jogoFinalizado() {
        return palavra.equals(String.valueOf(palavraEscondida));
    }

    public static void main(String[] args) {
        JogoDaForca jogo = new JogoDaForca();
        jogo.jogar();
    }
}
